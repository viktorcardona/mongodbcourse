************************
************************    Aggregation Example
************************

products        $group          results
 docs            upsert           docs

note: upsert: remember, creates if the doc not exist or update if ot already exist.

{
"_id": ObjectId("5h23402834jk2jlkjlj2399048"),
"name": "Nexus",
"category": "Tablets",
"manufacturer": "Google",
"price": 199
},
{
"_id": ObjectId("5h23402831212gggj12399048"),
"name": "Kindle Paper White",
"category": "Tablets",
"manufacturer": "Amazon",
"price": 129
}

db.products.aggregate(
    [{
        $group:{
            _id: "$manufacturer",
            num_products: {$sum:1}
        }
    }]
)

The above aggregation creates a collection results:
{ "_id" : "Amazon", "num_products" : 2 }
{ "_id" : "Sony", "num_products" : 1 }
{ "_id" : "Samsung", "num_products" : 4 }

The operator {$sum:1} increase and increase the value of num_products field



Quiz: Simple Example Expanded

If you have the following collection of stuff:
> db.stuff.find()
{ "_id" : ObjectId("50b26f9d80a78af03b5163c8"), "a" : 1, "b" : 1, "c" : 1 }
{ "_id" : ObjectId("50b26fb480a78af03b5163c9"), "a" : 2, "b" : 2, "c" : 1 }
{ "_id" : ObjectId("50b26fbf80a78af03b5163ca"), "a" : 3, "b" : 3, "c" : 1 }
{ "_id" : ObjectId("50b26fcd80a78af03b5163cb"), "a" : 3, "b" : 3, "c" : 2 }
{ "_id" : ObjectId("50b26fd380a78af03b5163cc"), "a" : 3, "b" : 5, "c" : 3 }

and you perform the following aggregation:

db.stuff.aggregate([{$group:{_id:'$c'}}])

How many documents will be in the result set from aggregate?
1
2
3
4
5

Answer: 3


